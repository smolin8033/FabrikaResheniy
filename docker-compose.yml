version: '3.7'
services:
  backend:
    build: ./backend
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/usr/src/notifications
    env_file:
      - .env.dev
    ports:
      - '8000:8000'

  postgres:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=admin_notifications
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=notifications
    env_file:
      - .env.dev
    ports:
      - '5432:5432'

  redis:
    image: redis:alpine
    restart: always
    expose:
      - '6379'
    ports:
      - '6379:6379'

  celery:
    build: ./backend
    command: celery -A config worker --loglevel=info -Q queue_for_single_worker --concurrency=1
    volumes:
      - ./backend:/usr/src/notifications
    env_file:
      - .env.dev
    depends_on:
      - redis
      - backend

  celery-beat:
    build: ./backend
    command: celery -A config beat -l info
    volumes:
      - ./backend:/usr/src/notifications/
    env_file:
      - .env.dev
    depends_on:
      - redis
      - backend

  flower:
    build: ./backend
    command: celery -A config flower
    volumes:
      - ./backend:/usr/src/notifications/
    ports:
      - 5555:5555
    env_file:
      - .env.dev
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    depends_on:
      - celery
      - redis
      - backend

volumes:
  postgres_data:
